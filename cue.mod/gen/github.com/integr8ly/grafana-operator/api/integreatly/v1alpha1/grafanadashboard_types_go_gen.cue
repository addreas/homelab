// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/integr8ly/grafana-operator/api/integreatly/v1alpha1

package v1alpha1

import (
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// GrafanaDashboardSpec defines the desired state of GrafanaDashboard
#GrafanaDashboardSpec: {
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
	// Important: Run "make" to regenerate code after modifying this file
	json:          string                              @go(Json)
	jsonnet?:      string                              @go(Jsonnet)
	plugins?:      #PluginList                         @go(Plugins)
	url?:          string                              @go(Url)
	configMapRef?: null | corev1.#ConfigMapKeySelector @go(ConfigMapRef,*corev1.ConfigMapKeySelector)
	datasources?: [...#GrafanaDashboardDatasource] @go(Datasources,[]GrafanaDashboardDatasource)
	customFolderName?: string @go(CustomFolderName)
}

#GrafanaDashboardDatasource: {
	inputName:      string @go(InputName)
	datasourceName: string @go(DatasourceName)
}

// Used to keep a dashboard reference without having access to the dashboard
// struct itself
#GrafanaDashboardRef: {
	name:       string       @go(Name)
	namespace:  string       @go(Namespace)
	uid:        string       @go(UID)
	hash:       string       @go(Hash)
	folderId?:  null | int64 @go(FolderId,*int64)
	folderName: string       @go(FolderName)
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// GrafanaDashboard is the Schema for the grafanadashboards API
#GrafanaDashboard: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta    @go(ObjectMeta)
	spec?:     #GrafanaDashboardSpec @go(Spec)
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// GrafanaDashboardList contains a list of GrafanaDashboard
// +kubebuilder:object:root=true
#GrafanaDashboardList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#GrafanaDashboard] @go(Items,[]GrafanaDashboard)
}
