// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/pivotal/kpack/pkg/apis/build/v1alpha1

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	corev1 "k8s.io/api/core/v1"
	corev1alpha1 "github.com/pivotal/kpack/pkg/apis/core/v1alpha1"
)

#BuilderKind: "Builder"

// +k8s:openapi-gen=true
#Builder: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta     @go(ObjectMeta)
	spec:      #NamespacedBuilderSpec @go(Spec)
	status:    #BuilderStatus         @go(Status)
}

// +k8s:openapi-gen=true
#BuilderSpec: {
	tag?:   string                  @go(Tag)
	stack?: corev1.#ObjectReference @go(Stack)
	store?: corev1.#ObjectReference @go(Store)

	// +listType
	order?: [...#OrderEntry] @go(Order,[]OrderEntry)
}

// +k8s:openapi-gen=true
#NamespacedBuilderSpec: {
	#BuilderSpec
	serviceAccount?: string @go(ServiceAccount)
}

// +k8s:openapi-gen=true
#BuilderStatus: {
	corev1alpha1.#Status
	builderMetadata?: #BuildpackMetadataList @go(BuilderMetadata)
	order?: [...#OrderEntry] @go(Order,[]OrderEntry)
	stack?:                   #BuildStack @go(Stack)
	latestImage?:             string      @go(LatestImage)
	observedStackGeneration?: int64       @go(ObservedStackGeneration)
	observedStoreGeneration?: int64       @go(ObservedStoreGeneration)
	os?:                      string      @go(OS)
}

// +k8s:openapi-gen=true
#BuilderList: {
	metav1.#TypeMeta
	metadata: metav1.#ListMeta @go(ListMeta)

	// +k8s:listType=atomic
	items: [...#Builder] @go(Items,[]Builder)
}
