// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/pivotal/kpack/pkg/apis/build/v1alpha1

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	corev1alpha1 "github.com/pivotal/kpack/pkg/apis/core/v1alpha1"
)

#ClusterStoreKind: "ClusterStore"

// +k8s:openapi-gen=true
#ClusterStore: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta  @go(ObjectMeta)
	spec:      #ClusterStoreSpec   @go(Spec)
	status:    #ClusterStoreStatus @go(Status)
}

// +k8s:openapi-gen=true
#ClusterStoreSpec: {
	// +listType
	sources?: [...#StoreImage] @go(Sources,[]StoreImage)
}

// +k8s:openapi-gen=true
#StoreImage: {
	image?: string @go(Image)
}

// +k8s:openapi-gen=true
#ClusterStoreStatus: {
	corev1alpha1.#Status

	// +listType
	buildpacks?: [...#StoreBuildpack] @go(Buildpacks,[]StoreBuildpack)
}

// +k8s:openapi-gen=true
#StoreBuildpack: {
	#BuildpackInfo
	buildpackage?: #BuildpackageInfo @go(Buildpackage)
	storeImage?:   #StoreImage       @go(StoreImage)
	diffId?:       string            @go(DiffId)
	digest?:       string            @go(Digest)
	size?:         int64             @go(Size)
	api?:          string            @go(API)
	homepage?:     string            @go(Homepage)

	// +listType
	order?: [...#OrderEntry] @go(Order,[]OrderEntry)

	// +listType
	stacks?: [...#BuildpackStack] @go(Stacks,[]BuildpackStack)
}

// +k8s:openapi-gen=true
#ClusterStoreList: {
	metav1.#TypeMeta
	metadata: metav1.#ListMeta @go(ListMeta)

	// +k8s:listType=atomic
	items: [...#ClusterStore] @go(Items,[]ClusterStore)
}
