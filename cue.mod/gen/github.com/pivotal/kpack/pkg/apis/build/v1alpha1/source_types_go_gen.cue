// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/pivotal/kpack/pkg/apis/build/v1alpha1

package v1alpha1

import corev1 "k8s.io/api/core/v1"

// +k8s:openapi-gen=true
#SourceConfig: {
	git?:      null | #Git      @go(Git,*Git)
	blob?:     null | #Blob     @go(Blob,*Blob)
	registry?: null | #Registry @go(Registry,*Registry)
	subPath?:  string           @go(SubPath)
}

#Source: _

// +k8s:openapi-gen=true
#Git: {
	url:      string @go(URL)
	revision: string @go(Revision)
}

// +k8s:openapi-gen=true
#Blob: {
	url: string @go(URL)
}

// +k8s:openapi-gen=true
#Registry: {
	image: string @go(Image)

	// +patchMergeKey=name
	// +patchStrategy=merge
	// +listType
	imagePullSecrets?: [...corev1.#LocalObjectReference] @go(ImagePullSecrets,[]corev1.LocalObjectReference) @protobuf(15,bytes,rep)
}

// +k8s:openapi-gen=true
#ResolvedSourceConfig: {
	git?:      null | #ResolvedGitSource      @go(Git,*ResolvedGitSource)
	blob?:     null | #ResolvedBlobSource     @go(Blob,*ResolvedBlobSource)
	registry?: null | #ResolvedRegistrySource @go(Registry,*ResolvedRegistrySource)
}

#ResolvedSource: _

#GitSourceKind: string // #enumGitSourceKind

#enumGitSourceKind:
	#Unknown |
	#Branch |
	#Tag |
	#Commit

#Unknown: #GitSourceKind & "Unknown"
#Branch:  #GitSourceKind & "Branch"
#Tag:     #GitSourceKind & "Tag"
#Commit:  #GitSourceKind & "Commit"

// +k8s:openapi-gen=true
#ResolvedGitSource: {
	url:      string         @go(URL)
	revision: string         @go(Revision)
	subPath?: string         @go(SubPath)
	type:     #GitSourceKind @go(Type)
}

// +k8s:openapi-gen=true
#ResolvedBlobSource: {
	url:      string @go(URL)
	subPath?: string @go(SubPath)
}

// +k8s:openapi-gen=true
#ResolvedRegistrySource: {
	image:    string @go(Image)
	subPath?: string @go(SubPath)

	// +patchMergeKey=name
	// +patchStrategy=merge
	// +listType
	imagePullSecrets?: [...corev1.#LocalObjectReference] @go(ImagePullSecrets,[]corev1.LocalObjectReference) @protobuf(15,bytes,rep)
}
