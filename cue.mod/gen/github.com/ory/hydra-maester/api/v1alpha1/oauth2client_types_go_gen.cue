// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/ory/hydra-maester/api/v1alpha1

package v1alpha1

import (
	apiextensionsv1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#StatusCode: string // #enumStatusCode

#enumStatusCode:
	#StatusRegistrationFailed |
	#StatusCreateSecretFailed |
	#StatusUpdateFailed |
	#StatusInvalidSecret |
	#StatusInvalidHydraAddress

#StatusRegistrationFailed:  #StatusCode & "CLIENT_REGISTRATION_FAILED"
#StatusCreateSecretFailed:  #StatusCode & "SECRET_CREATION_FAILED"
#StatusUpdateFailed:        #StatusCode & "CLIENT_UPDATE_FAILED"
#StatusInvalidSecret:       #StatusCode & "INVALID_SECRET"
#StatusInvalidHydraAddress: #StatusCode & "INVALID_HYDRA_ADDRESS"

// HydraAdmin defines the desired hydra admin instance to use for OAuth2Client
#HydraAdmin: {
	// +kubebuilder:validation:MaxLength=64
	// +kubebuilder:validation:Pattern=`(^$|^https?://.*)`
	//
	// URL is the URL for the hydra instance on
	// which to set up the client. This value will override the value
	// provided to `--hydra-url`
	url?: string @go(URL)

	// +kubebuilder:validation:Maximum=65535
	//
	// Port is the port for the hydra instance on
	// which to set up the client. This value will override the value
	// provided to `--hydra-port`
	port?: int @go(Port)

	// +kubebuilder:validation:Pattern=(^$|^/.*)
	//
	// Endpoint is the endpoint for the hydra instance on which
	// to set up the client. This value will override the value
	// provided to `--endpoint` (defaults to `"/clients"` in the
	// application)
	endpoint?: string @go(Endpoint)

	// +kubebuilder:validation:Pattern=(^$|https?|off)
	//
	// ForwardedProto overrides the `--forwarded-proto` flag. The
	// value "off" will force this to be off even if
	// `--forwarded-proto` is specified
	forwardedProto?: string @go(ForwardedProto)
}

// OAuth2ClientSpec defines the desired state of OAuth2Client
#OAuth2ClientSpec: {
	// ClientName is the human-readable string name of the client to be presented to the end-user during authorization.
	clientName?: string @go(ClientName)

	// +kubebuilder:validation:MaxItems=4
	// +kubebuilder:validation:MinItems=1
	//
	// GrantTypes is an array of grant types the client is allowed to use.
	grantTypes: [...#GrantType] @go(GrantTypes,[]GrantType)

	// +kubebuilder:validation:MaxItems=3
	// +kubebuilder:validation:MinItems=1
	//
	// ResponseTypes is an array of the OAuth 2.0 response type strings that the client can
	// use at the authorization endpoint.
	responseTypes?: [...#ResponseType] @go(ResponseTypes,[]ResponseType)

	// RedirectURIs is an array of the redirect URIs allowed for the application
	redirectUris?: [...#RedirectURI] @go(RedirectURIs,[]RedirectURI)

	// PostLogoutRedirectURIs is an array of the post logout redirect URIs allowed for the application
	postLogoutRedirectUris?: [...#RedirectURI] @go(PostLogoutRedirectURIs,[]RedirectURI)

	// AllowedCorsOrigins is an array of allowed CORS origins
	allowedCorsOrigins?: [...#RedirectURI] @go(AllowedCorsOrigins,[]RedirectURI)

	// Audience is a whitelist defining the audiences this client is allowed to request tokens for
	audience?: [...string] @go(Audience,[]string)

	// +kubebuilder:validation:Pattern=([a-zA-Z0-9\.\*]+\s?)+
	//
	// Scope is a string containing a space-separated list of scope values (as
	// described in Section 3.3 of OAuth 2.0 [RFC6749]) that the client
	// can use when requesting access tokens.
	scope: string @go(Scope)

	// +kubebuilder:validation:MinLength=1
	// +kubebuilder:validation:MaxLength=253
	// +kubebuilder:validation:Pattern=[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*
	//
	// SecretName points to the K8s secret that contains this client's ID and password
	secretName: string @go(SecretName)

	// HydraAdmin is the optional configuration to use for managing
	// this client
	hydraAdmin?: #HydraAdmin @go(HydraAdmin)

	// +kubebuilder:validation:Enum=client_secret_basic;client_secret_post;private_key_jwt;none
	//
	// Indication which authentication method shoud be used for the token endpoint
	tokenEndpointAuthMethod?: #TokenEndpointAuthMethod @go(TokenEndpointAuthMethod)

	// +kubebuilder:validation:Type=object
	// +nullable
	// +optional
	//
	// Metadata is abritrary data
	metadata?: apiextensionsv1.#JSON @go(Metadata)
}

// +kubebuilder:validation:Enum=client_credentials;authorization_code;implicit;refresh_token
// GrantType represents an OAuth 2.0 grant type
#GrantType: string

// +kubebuilder:validation:Enum=id_token;code;token;code token;code id_token;id_token token;code id_token token
// ResponseType represents an OAuth 2.0 response type strings
#ResponseType: string

// +kubebuilder:validation:Pattern=`\w+:/?/?[^\s]+`
// RedirectURI represents a redirect URI for the client
#RedirectURI: string

// +kubebuilder:validation:Enum=client_secret_basic;client_secret_post;private_key_jwt;none
// TokenEndpointAuthMethod represents an authentication method for token endpoint
#TokenEndpointAuthMethod: string

// OAuth2ClientStatus defines the observed state of OAuth2Client
#OAuth2ClientStatus: {
	// ObservedGeneration represents the most recent generation observed by the daemon set controller.
	observedGeneration?:  int64                @go(ObservedGeneration)
	reconciliationError?: #ReconciliationError @go(ReconciliationError)
}

// ReconciliationError represents an error that occurred during the reconciliation process
#ReconciliationError: {
	// Code is the status code of the reconciliation error
	statusCode?: #StatusCode @go(Code)

	// Description is the description of the reconciliation error
	description?: string @go(Description)
}

// OAuth2Client is the Schema for the oauth2clients API
#OAuth2Client: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta  @go(ObjectMeta)
	spec?:     #OAuth2ClientSpec   @go(Spec)
	status?:   #OAuth2ClientStatus @go(Status)
}

// OAuth2ClientList contains a list of OAuth2Client
#OAuth2ClientList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#OAuth2Client] @go(Items,[]OAuth2Client)
}
