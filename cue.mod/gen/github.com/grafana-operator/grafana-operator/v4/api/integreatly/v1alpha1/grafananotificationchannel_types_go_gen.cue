// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/grafana-operator/grafana-operator/v4/api/integreatly/v1alpha1

package v1alpha1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

#GrafanaNotificationChannelKind: "GrafanaNotificationChannel"

// GrafanaNotificationChannelSpec defines the desired state of GrafanaNotificationChannel
#GrafanaNotificationChannelSpec: {
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
	// Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file
	json: string @go(Json)
	name: string @go(Name)
}

// GrafanaNotificationChannelStatus defines the observed state of GrafanaNotificationChannel
#GrafanaNotificationChannelStatus: {
	phase:   #StatusPhase @go(Phase)
	uid:     string       @go(UID)
	id:      uint         @go(ID)
	message: string       @go(Message)
	hash:    string       @go(Hash)
}

// Used to keep a notification channel reference without having access to the notification channel
// struct itself
#GrafanaNotificationChannelRef: {
	name:      string @go(Name)
	namespace: string @go(Namespace)
	uid:       string @go(UID)
	hash:      string @go(Hash)
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// GrafanaNotificationChannel is the Schema for the GrafanaNotificationChannels API
#GrafanaNotificationChannel: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta                @go(ObjectMeta)
	spec?:     #GrafanaNotificationChannelSpec   @go(Spec)
	status?:   #GrafanaNotificationChannelStatus @go(Status)
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// GrafanaNotificationChannelList contains a list of GrafanaNotificationChannel
#GrafanaNotificationChannelList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#GrafanaNotificationChannel] @go(Items,[]GrafanaNotificationChannel)
}

#GrafanaNotificationChannelStatusMessage: {
	message:   string @go(Message)
	timestamp: string @go(Timestamp)
}
