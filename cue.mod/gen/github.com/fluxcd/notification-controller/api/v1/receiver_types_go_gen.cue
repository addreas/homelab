// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/fluxcd/notification-controller/api/v1

package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"github.com/fluxcd/pkg/apis/meta"
)

#ReceiverKind:        "Receiver"
#ReceiverWebhookPath: "/hook/"
#GenericReceiver:     "generic"
#GenericHMACReceiver: "generic-hmac"
#GitHubReceiver:      "github"
#GitLabReceiver:      "gitlab"
#BitbucketReceiver:   "bitbucket"
#HarborReceiver:      "harbor"
#DockerHubReceiver:   "dockerhub"
#QuayReceiver:        "quay"
#GCRReceiver:         "gcr"
#NexusReceiver:       "nexus"
#ACRReceiver:         "acr"
#CDEventsReceiver:    "cdevents"

// ReceiverSpec defines the desired state of the Receiver.
#ReceiverSpec: {
	// Type of webhook sender, used to determine
	// the validation procedure and payload deserialization.
	// +kubebuilder:validation:Enum=generic;generic-hmac;github;gitlab;bitbucket;harbor;dockerhub;quay;gcr;nexus;acr;cdevents
	// +required
	type: string @go(Type)

	// Interval at which to reconcile the Receiver with its Secret references.
	// +kubebuilder:validation:Type=string
	// +kubebuilder:validation:Pattern="^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$"
	// +kubebuilder:default:="10m"
	// +optional
	interval?: null | metav1.#Duration @go(Interval,*metav1.Duration)

	// Events specifies the list of event types to handle,
	// e.g. 'push' for GitHub or 'Push Hook' for GitLab.
	// +optional
	events?: [...string] @go(Events,[]string)

	// A list of resources to be notified about changes.
	// +required
	resources: [...#CrossNamespaceObjectReference] @go(Resources,[]CrossNamespaceObjectReference)

	// ResourceFilter is a CEL expression expected to return a boolean that is
	// evaluated for each resource referenced in the Resources field when a
	// webhook is received. If the expression returns false then the controller
	// will not request a reconciliation for the resource.
	// When the expression is specified the controller will parse it and mark
	// the object as terminally failed if the expression is invalid or does not
	// return a boolean.
	// +optional
	resourceFilter?: string @go(ResourceFilter)

	// SecretRef specifies the Secret containing the token used
	// to validate the payload authenticity.
	// +required
	secretRef: meta.#LocalObjectReference @go(SecretRef)

	// Suspend tells the controller to suspend subsequent
	// events handling for this receiver.
	// +optional
	suspend?: bool @go(Suspend)
}

// ReceiverStatus defines the observed state of the Receiver.
#ReceiverStatus: {
	meta.#ReconcileRequestStatus

	// Conditions holds the conditions for the Receiver.
	// +optional
	conditions?: [...metav1.#Condition] @go(Conditions,[]metav1.Condition)

	// WebhookPath is the generated incoming webhook address in the format
	// of '/hook/sha256sum(token+name+namespace)'.
	// +optional
	webhookPath?: string @go(WebhookPath)

	// ObservedGeneration is the last observed generation of the Receiver object.
	// +optional
	observedGeneration?: int64 @go(ObservedGeneration)
}

// Receiver is the Schema for the receivers API.
#Receiver: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec?:     #ReceiverSpec      @go(Spec)

	// +kubebuilder:default:={"observedGeneration":-1}
	status?: #ReceiverStatus @go(Status)
}

// ReceiverList contains a list of Receivers.
#ReceiverList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Receiver] @go(Items,[]Receiver)
}
