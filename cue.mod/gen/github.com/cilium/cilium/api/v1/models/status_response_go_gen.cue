// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/cilium/cilium/api/v1/models

package models

// StatusResponse Health and status information of daemon
//
// +k8s:deepcopy-gen=true
//
// swagger:model StatusResponse
#StatusResponse: {
	// Status of bandwidth manager
	"bandwidth-manager"?: null | #BandwidthManager @go(BandwidthManager,*BandwidthManager)

	// Status of BPF maps
	"bpf-maps"?: null | #BPFMapStatus @go(BpfMaps,*BPFMapStatus)

	// Status of Cilium daemon
	cilium?: null | #Status @go(Cilium,*Status)

	// When supported by the API, this client ID should be used by the
	// client when making another request to the server.
	// See for example "/cluster/nodes".
	//
	"client-id"?: int64 @go(ClientID)

	// Status of clock source
	"clock-source"?: null | #ClockSource @go(ClockSource,*ClockSource)

	// Status of cluster
	cluster?: null | #ClusterStatus @go(Cluster,*ClusterStatus)

	// Status of ClusterMesh
	"cluster-mesh"?: null | #ClusterMeshStatus @go(ClusterMesh,*ClusterMeshStatus)

	// Status of local container runtime
	"container-runtime"?: null | #Status @go(ContainerRuntime,*Status)

	// Status of all endpoint controllers
	controllers?: #ControllerStatuses @go(Controllers)

	// Status of host routing
	"host-routing"?: null | #HostRouting @go(HostRouting,*HostRouting)

	// Status of Hubble server
	hubble?: null | #HubbleStatus @go(Hubble,*HubbleStatus)

	// Status of IP address management
	ipam?: null | #IPAMStatus @go(Ipam,*IPAMStatus)

	// Status of kube-proxy replacement
	"kube-proxy-replacement"?: null | #KubeProxyReplacement @go(KubeProxyReplacement,*KubeProxyReplacement)

	// Status of Kubernetes integration
	kubernetes?: null | #K8sStatus @go(Kubernetes,*K8sStatus)

	// Status of key/value datastore
	kvstore?: null | #Status @go(Kvstore,*Status)

	// Status of masquerading
	masquerading?: null | #Masquerading @go(Masquerading,*Masquerading)

	// Status of the node monitor
	nodeMonitor?: null | #MonitorStatus @go(NodeMonitor,*MonitorStatus)

	// Status of proxy
	proxy?: null | #ProxyStatus @go(Proxy,*ProxyStatus)
}
