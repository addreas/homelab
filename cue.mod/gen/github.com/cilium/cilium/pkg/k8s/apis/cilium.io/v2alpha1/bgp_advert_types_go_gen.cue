// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2alpha1 --exclude=HubbleStatus$,ControllerStatus(es)?$,ControllerList$,StatusResponse$,DebugInfo$,Endpoint(Status)?(Slice)?(List)?$

package v2alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	slimv1 "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1"
)

// BGPAdvertisementType defines type of advertisement.
//
// Note list of supported advertisements is not exhaustive and can be extended in the future.
// Consumer of this API should be able to handle unknown values.
//
// +kubebuilder:validation:Enum=PodCIDR;CiliumPodIPPool;CiliumLoadBalancerIP
#BGPAdvertisementType: string // #enumBGPAdvertisementType

#enumBGPAdvertisementType:
	#PodCIDRAdvert |
	#CiliumPodIPPoolAdvert |
	#CiliumLoadBalancerIPAdvert

// PodCIDRAdvert when configured, Cilium will advertise pod CIDRs to BGP peers.
#PodCIDRAdvert: #BGPAdvertisementType & "PodCIDR"

// CiliumPodIPPoolAdvert when configured, Cilium will advertise prefixes from CiliumPodIPPools to BGP peers.
#CiliumPodIPPoolAdvert: #BGPAdvertisementType & "CiliumPodIPPool"

// CiliumLoadBalancerIPAdvert when configured, Cilium will advertise load balancer services IPs to BGP peers.
// The loadBalancerClass for a service must be nil or specify a class supported by Cilium,
// e.g. "io.cilium/bgp-control-plane".
//
// Refer to the following document for additional details regarding load balancer
// classes: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class
#CiliumLoadBalancerIPAdvert: #BGPAdvertisementType & "CiliumLoadBalancerIP"

// CiliumBGPAdvertisement is the Schema for the ciliumbgpadvertisements API
#CiliumBGPAdvertisement: {
	metav1.#TypeMeta

	// +deepequal-gen=false
	metadata: metav1.#ObjectMeta          @go(ObjectMeta)
	spec:     #CiliumBGPAdvertisementSpec @go(Spec)
}

// CiliumBGPAdvertisementList contains a list of CiliumBGPAdvertisement
#CiliumBGPAdvertisementList: {
	metav1.#TypeMeta
	metadata: metav1.#ListMeta @go(ListMeta)

	// Items is a list of CiliumBGPAdvertisement.
	items: [...#CiliumBGPAdvertisement] @go(Items,[]CiliumBGPAdvertisement)
}

#CiliumBGPAdvertisementSpec: {
	// Advertisements is a list of BGP advertisements.
	//
	// +kubebuilder:validation:Required
	// +kubebuilder:validation:MinItems=1
	advertisements: [...#Advertisement] @go(Advertisements,[]Advertisement)
}

// Advertisement defines which routes Cilium should advertise to BGP peers. Optionally, additional attributes can be
// set to the advertised routes.
#Advertisement: {
	// AdvertisementType defines type of advertisement which has to be advertised.
	//
	// +kubebuilder:validation:Required
	advertisementType: #BGPAdvertisementType @go(AdvertisementType)

	// Selector is a label selector to select objects of the type specified by AdvertisementType.
	// If not specified, all objects of the type specified by AdvertisementType are selected for advertisement.
	//
	// +kubebuilder:validation:Optional
	selector?: null | slimv1.#LabelSelector @go(Selector,*slimv1.LabelSelector)

	// Attributes defines additional attributes to set to the advertised routes.
	// If not specified, no additional attributes are set.
	//
	// +kubebuilder:validation:Optional
	attributes?: null | #CiliumBGPAttributes @go(Attributes,*CiliumBGPAttributes)
}

// CiliumBGPAttributes defines additional attributes to set to the advertised NLRIs.
#CiliumBGPAttributes: {
	// Community sets the community attribute in the route.
	// If not specified, no community attribute is set.
	//
	// +kubebuilder:validation:Optional
	community?: null | #BGPCommunities @go(Community,*BGPCommunities)

	// LocalPreference sets the local preference attribute in the route.
	// If not specified, no local preference attribute is set.
	//
	// +kubebuilder:validation:Optional
	localPreference?: null | int64 @go(LocalPreference,*int64)
}
