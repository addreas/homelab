// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2

package v2

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

#CiliumEnvoyConfig: {
	metav1.#TypeMeta

	// +k8s:openapi-gen=false
	// +deepequal-gen=false
	metadata: metav1.#ObjectMeta @go(ObjectMeta)

	// +k8s:openapi-gen=false
	// +kubebuilder:validation:Type=object
	spec?: #CiliumEnvoyConfigSpec @go(Spec)
}

// CiliumEnvoyConfigList is a list of CiliumEnvoyConfig objects.
#CiliumEnvoyConfigList: {
	metav1.#TypeMeta
	metadata: metav1.#ListMeta @go(ListMeta)

	// Items is a list of CiliumEnvoyConfig.
	items: [...#CiliumEnvoyConfig] @go(Items,[]CiliumEnvoyConfig)
}

#CiliumEnvoyConfigSpec: {
	// Services specifies Kubernetes services for which traffic is
	// forwarded to an Envoy listener for L7 load balancing. Backends
	// of these services are automatically synced to Envoy usign EDS.
	//
	// +kubebuilder:validation:Optional
	services?: [...null | #ServiceListener] @go(Services,[]*ServiceListener)

	// BackendServices specifies Kubernetes services whose backends
	// are automatically synced to Envoy using EDS.  Traffic for these
	// services is not forwarded to an Envoy listener. This allows an
	// Envoy listener load balance traffic to these backends while
	// normal Cilium service load balancing takes care of balancing
	// traffic for these services at the same time.
	//
	// +kubebuilder:validation:Optional
	backendServices?: [...null | #Service] @go(BackendServices,[]*Service)

	// Envoy xDS resources, a list of the following Envoy resource types:
	// type.googleapis.com/envoy.config.listener.v3.Listener,
	// type.googleapis.com/envoy.config.route.v3.RouteConfiguration,
	// type.googleapis.com/envoy.config.cluster.v3.Cluster,
	// type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment, and
	// type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret.
	//
	// +kubebuilder:validation:Required
	resources?: [...#XDSResource] @go(Resources,[]XDSResource)
}

#Service: {
	// Name is the name of a destination Kubernetes service that identifies traffic
	// to be redirected.
	//
	// +kubebuilder:validation:Required
	name: string @go(Name)

	// Namespace is the Kubernetes service namespace.
	// In CiliumEnvoyConfig namespace defaults to the namespace of the CEC,
	// In CiliumClusterwideEnvoyConfig namespace defaults to "default".
	// +kubebuilder:validation:Optional
	namespace: string @go(Namespace)

	// Port is the port number, which can be used for filtering in case of underlying
	// is exposing multiple port numbers.
	//
	// +kubebuilder:validation:Optional
	number?: [...string] @go(Ports,[]string)
}

#ServiceListener: {
	// Name is the name of a destination Kubernetes service that identifies traffic
	// to be redirected.
	//
	// +kubebuilder:validation:Required
	name: string @go(Name)

	// Namespace is the Kubernetes service namespace.
	// In CiliumEnvoyConfig namespace this is overridden to the namespace of the CEC,
	// In CiliumClusterwideEnvoyConfig namespace defaults to "default".
	// +kubebuilder:validation:Optional
	namespace: string @go(Namespace)

	// Listener specifies the name of the Envoy listener the
	// service traffic is redirected to. The listener must be
	// specified in the Envoy 'resources' of the same
	// CiliumEnvoyConfig.
	//
	// If omitted, the first listener specified in 'resources' is
	// used.
	//
	// +kubebuilder:validation:Optional
	listener: string @go(Listener)
}

// +kubebuilder:pruning:PreserveUnknownFields
#XDSResource: _
