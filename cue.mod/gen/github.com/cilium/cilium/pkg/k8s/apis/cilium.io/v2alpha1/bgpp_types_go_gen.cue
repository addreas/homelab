// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2alpha1 --exclude=HubbleStatus$,ControllerStatus(es)?$,ControllerList$,StatusResponse$,DebugInfo$,Endpoint(Status)?(Slice)?(List)?$

package v2alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	slimv1 "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1"
)

// DefaultBGPExportPodCIDR defines the default value for ExportPodCIDR determining whether to export the Node's private CIDR block.
#DefaultBGPExportPodCIDR: false

// DefaultBGPPeerLocalPort defines the default value for the local port over which to connect to the peer.
// By default, BGP control plane will not set this value, and the kernel will pick a random port source port.
#DefaultBGPPeerLocalPort: 0

// DefaultBGPPeerPort defines the TCP port number of a CiliumBGPNeighbor when PeerPort is unspecified.
#DefaultBGPPeerPort: 179

// DefaultBGPEBGPMultihopTTL defines the default value for the TTL value used in BGP packets sent to the eBGP neighbors.
#DefaultBGPEBGPMultihopTTL: 1

// DefaultBGPConnectRetryTimeSeconds defines the default initial value for the BGP ConnectRetryTimer (RFC 4271, Section 8).
#DefaultBGPConnectRetryTimeSeconds: 120

// DefaultBGPHoldTimeSeconds defines the default initial value for the BGP HoldTimer (RFC 4271, Section 4.2).
#DefaultBGPHoldTimeSeconds: 90

// DefaultBGPKeepAliveTimeSeconds defines the default initial value for the BGP KeepaliveTimer (RFC 4271, Section 8).
#DefaultBGPKeepAliveTimeSeconds: 30

// DefaultBGPGRRestartTimeSeconds defines default Restart Time for graceful restart (RFC 4724, section 4.2)
#DefaultBGPGRRestartTimeSeconds: 120

// BGPLoadBalancerClass defines the BGP Control Plane load balancer class for Services.
#BGPLoadBalancerClass: "io.cilium/bgp-control-plane"

// PodCIDRSelectorName defines the name for a selector matching Pod CIDRs
// (standard cluster scope / Kubernetes IPAM CIDRs, not Multi-Pool IPAM CIDRs).
#PodCIDRSelectorName: "PodCIDR"

// CiliumLoadBalancerIPPoolSelectorName defines the name for a selector matching CiliumLoadBalancerIPPool resources.
#CiliumLoadBalancerIPPoolSelectorName: "CiliumLoadBalancerIPPool"

// CiliumPodIPPoolSelectorName defines the name for a selector matching CiliumPodIPPool resources.
#CiliumPodIPPoolSelectorName: "CiliumPodIPPool"

// CiliumBGPPeeringPolicy is a Kubernetes third-party resource for instructing
// Cilium's BGP control plane to create virtual BGP routers.
#CiliumBGPPeeringPolicy: {
	metav1.#TypeMeta

	// +deepequal-gen=false
	metadata: metav1.#ObjectMeta @go(ObjectMeta)

	// Spec is a human readable description of a BGP peering policy
	//
	// +kubebuilder:validation:Optional
	spec?: #CiliumBGPPeeringPolicySpec @go(Spec)
}

// CiliumBGPPeeringPolicyList is a list of
// CiliumBGPPeeringPolicy objects.
#CiliumBGPPeeringPolicyList: {
	metav1.#TypeMeta
	metadata: metav1.#ListMeta @go(ListMeta)

	// Items is a list of CiliumBGPPeeringPolicies.
	items: [...#CiliumBGPPeeringPolicy] @go(Items,[]CiliumBGPPeeringPolicy)
}

// CiliumBGPPeeringPolicySpec specifies one or more CiliumBGPVirtualRouter(s)
// to apply to nodes matching it's label selector.
#CiliumBGPPeeringPolicySpec: {
	// NodeSelector selects a group of nodes where this BGP Peering
	// Policy applies.
	//
	// If empty / nil this policy applies to all nodes.
	//
	// +kubebuilder:validation:Optional
	nodeSelector?: null | slimv1.#LabelSelector @go(NodeSelector,*slimv1.LabelSelector)

	// A list of CiliumBGPVirtualRouter(s) which instructs
	// the BGP control plane how to instantiate virtual BGP routers.
	//
	// +kubebuilder:validation:Required
	// +kubebuilder:validation:MinItems=1
	virtualRouters: [...#CiliumBGPVirtualRouter] @go(VirtualRouters,[]CiliumBGPVirtualRouter)
}

#CiliumBGPNeighborGracefulRestart: {
	// Enabled flag, when set enables graceful restart capability.
	//
	// +kubebuilder:validation:Required
	enabled: bool @go(Enabled)

	// RestartTimeSeconds is the estimated time it will take for the BGP
	// session to be re-established with peer after a restart.
	// After this period, peer will remove stale routes. This is
	// described RFC 4724 section 4.2.
	//
	// +kubebuilder:validation:Optional
	// +kubebuilder:validation:Minimum=1
	// +kubebuilder:validation:Maximum=4095
	// +kubebuilder:default=120
	restartTimeSeconds?: null | int32 @go(RestartTimeSeconds,*int32)
}

// BGPStandardCommunity type represents a value of the "standard" 32-bit BGP Communities Attribute (RFC 1997)
// as a 4-byte decimal number or two 2-byte decimal numbers separated by a colon (<0-65535>:<0-65535>).
// For example, no-export community value is 65553:65281.
// +kubebuilder:validation:Pattern=`^([0-9]|[1-9][0-9]{1,8}|[1-3][0-9]{9}|4[01][0-9]{8}|42[0-8][0-9]{7}|429[0-3][0-9]{6}|4294[0-8][0-9]{5}|42949[0-5][0-9]{4}|429496[0-6][0-9]{3}|4294967[01][0-9]{2}|42949672[0-8][0-9]|429496729[0-5])$|^([0-9]|[1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]):([0-9]|[1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$`
#BGPStandardCommunity: string

// BGPWellKnownCommunity type represents a value of the "standard" 32-bit BGP Communities Attribute (RFC 1997)
// as a well-known string alias to its numeric value. Allowed values and their mapping to the numeric values:
//
//	internet                   = 0x00000000 (0:0)
//	planned-shut               = 0xffff0000 (65535:0)
//	accept-own                 = 0xffff0001 (65535:1)
//	route-filter-translated-v4 = 0xffff0002 (65535:2)
//	route-filter-v4            = 0xffff0003 (65535:3)
//	route-filter-translated-v6 = 0xffff0004 (65535:4)
//	route-filter-v6            = 0xffff0005 (65535:5)
//	llgr-stale                 = 0xffff0006 (65535:6)
//	no-llgr                    = 0xffff0007 (65535:7)
//	blackhole                  = 0xffff029a (65535:666)
//	no-export                  = 0xffffff01	(65535:65281)
//	no-advertise               = 0xffffff02 (65535:65282)
//	no-export-subconfed        = 0xffffff03 (65535:65283)
//	no-peer                    = 0xffffff04 (65535:65284)
//
// +kubebuilder:validation:Enum=internet;planned-shut;accept-own;route-filter-translated-v4;route-filter-v4;route-filter-translated-v6;route-filter-v6;llgr-stale;no-llgr;blackhole;no-export;no-advertise;no-export-subconfed;no-peer
#BGPWellKnownCommunity: string

// BGPLargeCommunity type represents a value of the BGP Large Communities Attribute (RFC 8092),
// as three 4-byte decimal numbers separated by colons.
// +kubebuilder:validation:Pattern=`^([0-9]|[1-9][0-9]{1,8}|[1-3][0-9]{9}|4[01][0-9]{8}|42[0-8][0-9]{7}|429[0-3][0-9]{6}|4294[0-8][0-9]{5}|42949[0-5][0-9]{4}|429496[0-6][0-9]{3}|4294967[01][0-9]{2}|42949672[0-8][0-9]|429496729[0-5]):([0-9]|[1-9][0-9]{1,8}|[1-3][0-9]{9}|4[01][0-9]{8}|42[0-8][0-9]{7}|429[0-3][0-9]{6}|4294[0-8][0-9]{5}|42949[0-5][0-9]{4}|429496[0-6][0-9]{3}|4294967[01][0-9]{2}|42949672[0-8][0-9]|429496729[0-5]):([0-9]|[1-9][0-9]{1,8}|[1-3][0-9]{9}|4[01][0-9]{8}|42[0-8][0-9]{7}|429[0-3][0-9]{6}|4294[0-8][0-9]{5}|42949[0-5][0-9]{4}|429496[0-6][0-9]{3}|4294967[01][0-9]{2}|42949672[0-8][0-9]|429496729[0-5])$`
#BGPLargeCommunity: string

// BGPCommunities holds community values of the supported BGP community path attributes.
#BGPCommunities: {
	// Standard holds a list of "standard" 32-bit BGP Communities Attribute (RFC 1997) values defined as numeric values.
	//
	// +kubebuilder:validation:Optional
	standard?: [...#BGPStandardCommunity] @go(Standard,[]BGPStandardCommunity)

	// WellKnown holds a list "standard" 32-bit BGP Communities Attribute (RFC 1997) values defined as
	// well-known string aliases to their numeric values.
	//
	// +kubebuilder:validation:Optional
	wellKnown?: [...#BGPWellKnownCommunity] @go(WellKnown,[]BGPWellKnownCommunity)

	// Large holds a list of the BGP Large Communities Attribute (RFC 8092) values.
	//
	// +kubebuilder:validation:Optional
	large?: [...#BGPLargeCommunity] @go(Large,[]BGPLargeCommunity)
}

// CiliumBGPPathAttributes can be used to apply additional path attributes
// to matched routes when advertising them to a BGP peer.
#CiliumBGPPathAttributes: {
	// SelectorType defines the object type on which the Selector applies:
	// - For "PodCIDR" the Selector matches k8s CiliumNode resources
	//   (path attributes apply to routes announced for PodCIDRs of selected CiliumNodes.
	//   Only affects routes of cluster scope / Kubernetes IPAM CIDRs, not Multi-Pool IPAM CIDRs.
	// - For "CiliumLoadBalancerIPPool" the Selector matches CiliumLoadBalancerIPPool custom resources
	//   (path attributes apply to routes announced for selected CiliumLoadBalancerIPPools).
	// - For "CiliumPodIPPool" the Selector matches CiliumPodIPPool custom resources
	//   (path attributes apply to routes announced for allocated CIDRs of selected CiliumPodIPPools).
	//
	// +kubebuilder:validation:Enum=PodCIDR;CiliumLoadBalancerIPPool;CiliumPodIPPool
	// +kubebuilder:validation:Required
	selectorType: string @go(SelectorType)

	// Selector selects a group of objects of the SelectorType
	// resulting into routes that will be announced with the configured Attributes.
	// If nil / not set, all objects of the SelectorType are selected.
	//
	// +kubebuilder:validation:Optional
	selector?: null | slimv1.#LabelSelector @go(Selector,*slimv1.LabelSelector)

	// Communities defines a set of community values advertised in the supported BGP Communities path attributes.
	// If nil / not set, no BGP Communities path attribute will be advertised.
	//
	// +kubebuilder:validation:Optional
	communities?: null | #BGPCommunities @go(Communities,*BGPCommunities)

	// LocalPreference defines the preference value advertised in the BGP Local Preference path attribute.
	// As Local Preference is only valid for iBGP peers, this value will be ignored for eBGP peers
	// (no Local Preference path attribute will be advertised).
	// If nil / not set, the default Local Preference of 100 will be advertised in
	// the Local Preference path attribute for iBGP peers.
	//
	// +kubebuilder:validation:Optional
	// +kubebuilder:validation:Minimum=0
	// +kubebuilder:validation:Maximum=4294967295
	localPreference?: null | int64 @go(LocalPreference,*int64)
}

// CiliumBGPNeighbor is a neighboring peer for use in a
// CiliumBGPVirtualRouter configuration.
#CiliumBGPNeighbor: {
	// PeerAddress is the IP address of the peer.
	// This must be in CIDR notation and use a /32 to express
	// a single host.
	//
	// +kubebuilder:validation:Required
	// +kubebuilder:validation:Format=cidr
	peerAddress: string @go(PeerAddress)

	// PeerPort is the TCP port of the peer. 1-65535 is the range of
	// valid port numbers that can be specified. If unset, defaults to 179.
	//
	// +kubebuilder:validation:Optional
	// +kubebuilder:validation:Minimum=1
	// +kubebuilder:validation:Maximum=65535
	// +kubebuilder:default=179
	peerPort?: null | int32 @go(PeerPort,*int32)

	// PeerASN is the ASN of the peer BGP router.
	// Supports extended 32bit ASNs
	//
	// +kubebuilder:validation:Required
	// +kubebuilder:validation:Minimum=0
	// +kubebuilder:validation:Maximum=4294967295
	peerASN: int64 @go(PeerASN)

	// AuthSecretRef is the name of the secret to use to fetch a TCP
	// authentication password for this peer.
	// +kubebuilder:validation:Optional
	authSecretRef?: null | string @go(AuthSecretRef,*string)

	// EBGPMultihopTTL controls the multi-hop feature for eBGP peers.
	// Its value defines the Time To Live (TTL) value used in BGP packets sent to the neighbor.
	// The value 1 implies that eBGP multi-hop feature is disabled (only a single hop is allowed).
	// This field is ignored for iBGP peers.
	//
	// +kubebuilder:validation:Optional
	// +kubebuilder:validation:Minimum=1
	// +kubebuilder:validation:Maximum=255
	// +kubebuilder:default=1
	eBGPMultihopTTL?: null | int32 @go(EBGPMultihopTTL,*int32)

	// ConnectRetryTimeSeconds defines the initial value for the BGP ConnectRetryTimer (RFC 4271, Section 8).
	//
	// +kubebuilder:validation:Optional
	// +kubebuilder:validation:Minimum=1
	// +kubebuilder:validation:Maximum=2147483647
	// +kubebuilder:default=120
	connectRetryTimeSeconds?: null | int32 @go(ConnectRetryTimeSeconds,*int32)

	// HoldTimeSeconds defines the initial value for the BGP HoldTimer (RFC 4271, Section 4.2).
	// Updating this value will cause a session reset.
	//
	// +kubebuilder:validation:Optional
	// +kubebuilder:validation:Minimum=3
	// +kubebuilder:validation:Maximum=65535
	// +kubebuilder:default=90
	holdTimeSeconds?: null | int32 @go(HoldTimeSeconds,*int32)

	// KeepaliveTimeSeconds defines the initial value for the BGP KeepaliveTimer (RFC 4271, Section 8).
	// It can not be larger than HoldTimeSeconds. Updating this value will cause a session reset.
	//
	// +kubebuilder:validation:Optional
	// +kubebuilder:validation:Minimum=1
	// +kubebuilder:validation:Maximum=65535
	// +kubebuilder:default=30
	keepAliveTimeSeconds?: null | int32 @go(KeepAliveTimeSeconds,*int32)

	// GracefulRestart defines graceful restart parameters which are negotiated
	// with this neighbor. If empty / nil, the graceful restart capability is disabled.
	//
	// +kubebuilder:validation:Optional
	gracefulRestart?: null | #CiliumBGPNeighborGracefulRestart @go(GracefulRestart,*CiliumBGPNeighborGracefulRestart)

	// Families, if provided, defines a set of AFI/SAFIs the speaker will
	// negotiate with it's peer.
	//
	// If this slice is not provided the default families of IPv6 and IPv4 will
	// be provided.
	//
	// +kubebuilder:validation:Optional
	families: [...#CiliumBGPFamily] @go(Families,[]CiliumBGPFamily)

	// AdvertisedPathAttributes can be used to apply additional path attributes
	// to selected routes when advertising them to the peer.
	// If empty / nil, no additional path attributes are advertised.
	//
	// +kubebuilder:validation:Optional
	advertisedPathAttributes?: [...#CiliumBGPPathAttributes] @go(AdvertisedPathAttributes,[]CiliumBGPPathAttributes)
}

// CiliumBGPVirtualRouter defines a discrete BGP virtual router configuration.
#CiliumBGPVirtualRouter: {
	// LocalASN is the ASN of this virtual router.
	// Supports extended 32bit ASNs
	//
	// +kubebuilder:validation:Required
	// +kubebuilder:validation:Minimum=0
	// +kubebuilder:validation:Maximum=4294967295
	localASN: int64 @go(LocalASN)

	// ExportPodCIDR determines whether to export the Node's private CIDR block
	// to the configured neighbors.
	//
	// +kubebuilder:validation:Optional
	// +kubebuilder:default=false
	exportPodCIDR?: null | bool @go(ExportPodCIDR,*bool)

	// PodIPPoolSelector selects CiliumPodIPPools based on labels. The virtual
	// router will announce allocated CIDRs of matching CiliumPodIPPools.
	//
	// If empty / nil no CiliumPodIPPools will be announced.
	//
	// +kubebuilder:validation:Optional
	podIPPoolSelector?: null | slimv1.#LabelSelector @go(PodIPPoolSelector,*slimv1.LabelSelector)

	// ServiceSelector selects a group of load balancer services which this
	// virtual router will announce. The loadBalancerClass for a service must
	// be nil or specify a class supported by Cilium, e.g. "io.cilium/bgp-control-plane".
	// Refer to the following document for additional details regarding load balancer
	// classes:
	//
	//   https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class
	//
	// If empty / nil no services will be announced.
	//
	// +kubebuilder:validation:Optional
	serviceSelector?: null | slimv1.#LabelSelector @go(ServiceSelector,*slimv1.LabelSelector)

	// ServiceAdvertisements selects a group of BGP Advertisement(s) to advertise
	// for the selected services.
	//
	// +kubebuilder:validation:Optional
	// +kubebuilder:default={LoadBalancerIP}
	serviceAdvertisements?: [...#BGPServiceAddressType] @go(ServiceAdvertisements,[]BGPServiceAddressType)

	// Neighbors is a list of neighboring BGP peers for this virtual router
	//
	// +kubebuilder:validation:Required
	// +kubebuilder:validation:MinItems=1
	neighbors: [...#CiliumBGPNeighbor] @go(Neighbors,[]CiliumBGPNeighbor)
}
