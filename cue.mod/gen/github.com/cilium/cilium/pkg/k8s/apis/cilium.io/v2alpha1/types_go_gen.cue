// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2alpha1

package v2alpha1

import (
	slimv1 "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1"
	cilium_v2 "github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2"
	"github.com/cilium/cilium/api/v1/models"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:validation:Format=cidr
#IPv4orIPv6CIDR: string

#EgressRule: {
	// Selects Namespaces using cluster-scoped labels. This field follows standard label
	// selector semantics; if present but empty, it selects all namespaces.
	namespaceSelector?: null | slimv1.#LabelSelector @go(NamespaceSelector,*slimv1.LabelSelector)

	// This is a label selector which selects Pods. This field follows standard label
	// selector semantics; if present but empty, it selects all pods.
	podSelector?: null | slimv1.#LabelSelector @go(PodSelector,*slimv1.LabelSelector)
}

// CoreCiliumEndpoint is slim version of status of CiliumEndpoint.
#CoreCiliumEndpoint: {
	// Name indicate as CiliumEndpoint name.
	name?: string @go(Name)

	// IdentityID is the numeric identity of the endpoint
	id?: int64 @go(IdentityID)

	// +kubebuilder:validation:Optional
	networking?: null | cilium_v2.#EndpointNetworking @go(Networking,*cilium_v2.EndpointNetworking)

	// +kubebuilder:validation:Optional
	encryption?:    cilium_v2.#EncryptionSpec @go(Encryption)
	"named-ports"?: models.#NamedPorts        @go(NamedPorts)
}

// CiliumEndpointSlice contains a group of CoreCiliumendpoints.
#CiliumEndpointSlice: {
	metav1.#TypeMeta

	// +deepequal-gen=false
	metadata: metav1.#ObjectMeta @go(ObjectMeta)

	// Namespace indicate as CiliumEndpointSlice namespace.
	// All the CiliumEndpoints within the same namespace are put together
	// in CiliumEndpointSlice.
	namespace?: string @go(Namespace)

	// Endpoints is a list of coreCEPs packed in a CiliumEndpointSlice
	endpoints: [...#CoreCiliumEndpoint] @go(Endpoints,[]CoreCiliumEndpoint)
}

// CiliumEndpointSliceList is a list of CiliumEndpointSlice objects.
#CiliumEndpointSliceList: {
	metav1.#TypeMeta
	metadata: metav1.#ListMeta @go(ListMeta)

	// Items is a list of CiliumEndpointSlice.
	items: [...#CiliumEndpointSlice] @go(Items,[]CiliumEndpointSlice)
}
