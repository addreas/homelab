// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/cilium/cilium/pkg/aws/eni/types

package types

// ENISpec is the ENI specification of a node. This specification is considered
// by the cilium-operator to act as an IPAM operator and makes ENI IPs available
// via the IPAMSpec section.
//
// The ENI specification can either be provided explicitly by the user or the
// cilium agent running on the node can be instructed to create the CiliumNode
// custom resource along with an ENI specification when the node registers
// itself to the Kubernetes cluster.
#ENISpec: {
	// InstanceID is the AWS InstanceId of the node. The InstanceID is used
	// to retrieve AWS metadata for the node.
	//
	// OBSOLETE: This field is obsolete, please use Spec.InstanceID
	//
	// +kubebuilder:validation:Optional
	"instance-id"?: string @go(InstanceID)

	// InstanceType is the AWS EC2 instance type, e.g. "m5.large"
	//
	// +kubebuilder:validation:Optional
	"instance-type"?: string @go(InstanceType)

	// MinAllocate is the minimum number of IPs that must be allocated when
	// the node is first bootstrapped. It defines the minimum base socket
	// of addresses that must be available. After reaching this watermark,
	// the PreAllocate and MaxAboveWatermark logic takes over to continue
	// allocating IPs.
	//
	// OBSOLETE: This field is obsolete, please use Spec.IPAM.MinAllocate
	//
	// +kubebuilder:validation:Minimum=0
	// +kubebuilder:validation:Optional
	"min-allocate"?: int @go(MinAllocate)

	// PreAllocate defines the number of IP addresses that must be
	// available for allocation in the IPAMspec. It defines the buffer of
	// addresses available immediately without requiring cilium-operator to
	// get involved.
	//
	// OBSOLETE: This field is obsolete, please use Spec.IPAM.PreAllocate
	//
	// +kubebuilder:validation:Minimum=0
	// +kubebuilder:validation:Optional
	"pre-allocate"?: int @go(PreAllocate)

	// MaxAboveWatermark is the maximum number of addresses to allocate
	// beyond the addresses needed to reach the PreAllocate watermark.
	// Going above the watermark can help reduce the number of API calls to
	// allocate IPs, e.g. when a new ENI is allocated, as many secondary
	// IPs as possible are allocated. Limiting the amount can help reduce
	// waste of IPs.
	//
	// OBSOLETE: This field is obsolete, please use Spec.IPAM.MaxAboveWatermark
	//
	// +kubebuilder:validation:Minimum=0
	// +kubebuilder:validation:Optional
	"max-above-watermark"?: int @go(MaxAboveWatermark)

	// FirstInterfaceIndex is the index of the first ENI to use for IP
	// allocation, e.g. if the node has eth0, eth1, eth2 and
	// FirstInterfaceIndex is set to 1, then only eth1 and eth2 will be
	// used for IP allocation, eth0 will be ignored for PodIP allocation.
	//
	// +kubebuilder:validation:Minimum=0
	// +kubebuilder:validation:Optional
	"first-interface-index"?: null | int @go(FirstInterfaceIndex,*int)

	// SecurityGroups is the list of security groups to attach to any ENI
	// that is created and attached to the instance.
	//
	// +kubebuilder:validation:Optional
	"security-groups"?: [...string] @go(SecurityGroups,[]string)

	// SecurityGroupTags is the list of tags to use when evaliating what
	// AWS security groups to use for the ENI.
	//
	// +kubebuilder:validation:Optional
	"security-group-tags"?: {[string]: string} @go(SecurityGroupTags,map[string]string)

	// SubnetTags is the list of tags to use when evaluating what AWS
	// subnets to use for ENI and IP allocation.
	//
	// +kubebuilder:validation:Optional
	"subnet-tags"?: {[string]: string} @go(SubnetTags,map[string]string)

	// VpcID is the VPC ID to use when allocating ENIs.
	//
	// +kubebuilder:validation:Optional
	"vpc-id"?: string @go(VpcID)

	// AvailabilityZone is the availability zone to use when allocating
	// ENIs.
	//
	// +kubebuilder:validation:Optional
	"availability-zone"?: string @go(AvailabilityZone)

	// DeleteOnTermination defines that the ENI should be deleted when the
	// associated instance is terminated. If the parameter is not set the
	// default behavior is to delete the ENI on instance termination.
	//
	// +kubebuilder:validation:Optional
	"delete-on-termination"?: null | bool @go(DeleteOnTermination,*bool)
}

// ENI represents an AWS Elastic Network Interface
//
// More details:
// https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html
#ENI: {
	// ID is the ENI ID
	//
	// +optional
	id?: string @go(ID)

	// IP is the primary IP of the ENI
	//
	// +optional
	ip?: string @go(IP)

	// MAC is the mac address of the ENI
	//
	// +optional
	mac?: string @go(MAC)

	// AvailabilityZone is the availability zone of the ENI
	//
	// +optional
	"availability-zone"?: string @go(AvailabilityZone)

	// Description is the description field of the ENI
	//
	// +optional
	description?: string @go(Description)

	// Number is the interface index, it used in combination with
	// FirstInterfaceIndex
	//
	// +optional
	number?: int @go(Number)

	// Subnet is the subnet the ENI is associated with
	//
	// +optional
	subnet?: #AwsSubnet @go(Subnet)

	// VPC is the VPC information to which the ENI is attached to
	//
	// +optional
	vpc?: #AwsVPC @go(VPC)

	// Addresses is the list of all IPs associated with the ENI, including
	// all secondary addresses
	//
	// +optional
	addresses?: [...string] @go(Addresses,[]string)

	// SecurityGroups are the security groups associated with the ENI
	"security-groups"?: [...string] @go(SecurityGroups,[]string)
}

// ENIStatus is the status of ENI addressing of the node
#ENIStatus: {
	// ENIs is the list of ENIs on the node
	//
	// +optional
	enis?: {[string]: #ENI} @go(ENIs,map[string]ENI)
}

// AwsSubnet stores information regarding an AWS subnet
#AwsSubnet: {
	// ID is the ID of the subnet
	id?: string @go(ID)

	// CIDR is the CIDR range associated with the subnet
	cidr?: string @go(CIDR)
}

// AwsVPC stores information regarding an AWS VPC
#AwsVPC: {
	/// ID is the ID of a VPC
	id?: string @go(ID)

	// PrimaryCIDR is the primary CIDR of the VPC
	"primary-cidr"?: string @go(PrimaryCIDR)

	// CIDRs is the list of CIDR ranges associated with the VPC
	cidrs?: [...string] @go(CIDRs,[]string)
}
