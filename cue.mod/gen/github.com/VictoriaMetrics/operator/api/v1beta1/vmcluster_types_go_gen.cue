// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/VictoriaMetrics/operator/api/v1beta1

package v1beta1

import (
	"k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	appsv1 "k8s.io/api/apps/v1"
)

#ClusterStatusExpanding:     "expanding"
#ClusterStatusOperational:   "operational"
#ClusterStatusFailed:        "failed"
#InternalOperatorError:      "failed to perform vmcluster preparing jobs"
#StorageRollingUpdateFailed: "failed to perform rolling update on vmStorage"
#StorageCreationFailed:      "failed to create vmStorage statefulset"
#SelectRollingUpdateFailed:  "failed to perform rolling update on vmSelect"
#SelectCreationFailed:       "failed to create vmSelect statefulset"
#InsertCreationFailed:       "failed to create vmInsert deployment"

// VMClusterSpec defines the desired state of VMCluster
// +k8s:openapi-gen=true
#VMClusterSpec: {
	// RetentionPeriod in months
	// +kubebuilder:validation:Pattern:="[1-9]+"
	retentionPeriod: string @go(RetentionPeriod)

	// ReplicationFactor defines how many copies of data make among
	// distinct storage nodes
	// +optional
	replicationFactor?: null | int32 @go(ReplicationFactor,*int32)

	// PodSecurityPolicyName - defines name for podSecurityPolicy
	// in case of empty value, prefixedName will be used.
	// +optional
	podSecurityPolicyName?: string @go(PodSecurityPolicyName)

	// ServiceAccountName is the name of the ServiceAccount to use to run the
	// VMSelect Pods.
	// +optional
	serviceAccountName?: string @go(ServiceAccountName)

	// ClusterVersion defines default images tag for all components.
	// it can be overwritten with component specific image.tag value.
	clusterVersion?: string @go(ClusterVersion)

	// ImagePullSecrets An optional list of references to secrets in the same namespace
	// to use for pulling images from registries
	// see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
	// +optional
	imagePullSecrets?: [...v1.#LocalObjectReference] @go(ImagePullSecrets,[]v1.LocalObjectReference)

	// +optional
	vmselect?: null | #VMSelect @go(VMSelect,*VMSelect)

	// +optional
	vminsert?: null | #VMInsert @go(VMInsert,*VMInsert)

	// +optional
	vmstorage?: null | #VMStorage @go(VMStorage,*VMStorage)
}

// VMCluster is fast, cost-effective and scalable time-series database.
// Cluster version with
// +operator-sdk:gen-csv:customresourcedefinitions.displayName="VMCluster App"
// +operator-sdk:gen-csv:customresourcedefinitions.resources="Deployment,apps"
// +operator-sdk:gen-csv:customresourcedefinitions.resources="Statefulset,apps"
// +operator-sdk:gen-csv:customresourcedefinitions.resources="Service,v1"
// +genclient
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=vmclusters,scope=Namespaced
// +kubebuilder:printcolumn:name="Insert Count",type="string",JSONPath=".spec.vminsert.replicaCount",description="replicas of VMInsert"
// +kubebuilder:printcolumn:name="Storage Count",type="string",JSONPath=".spec.vmstorage.replicaCount",description="replicas of VMStorage"
// +kubebuilder:printcolumn:name="Select Count",type="string",JSONPath=".spec.vmselect.replicaCount",description="replicas of VMSelect"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.clusterStatus",description="Current status of cluster"
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
#VMCluster: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #VMClusterSpec     @go(Spec)
	status?:   #VMClusterStatus   @go(Status)
}

// VMClusterStatus defines the observed state of VMCluster
#VMClusterStatus: {
	updateFailCount: int    @go(UpdateFailCount)
	lastSync?:       string @go(LastSync)
	clusterStatus:   string @go(ClusterStatus)
	reason?:         string @go(Reason)
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// VMClusterList contains a list of VMCluster
#VMClusterList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#VMCluster] @go(Items,[]VMCluster)
}

#VMSelect: {
	name?: string @go(Name)

	// PodMetadata configures Labels and Annotations which are propagated to the VMSelect pods.
	podMetadata?: null | #EmbeddedObjectMetadata @go(PodMetadata,*EmbeddedObjectMetadata)

	// Image - docker image settings for VMSelect
	// +optional
	image?: #Image @go(Image)

	// Secrets is a list of Secrets in the same namespace as the VMSelect
	// object, which shall be mounted into the VMSelect Pods.
	// The Secrets are mounted into /etc/vm/secrets/<secret-name>.
	// +optional
	secrets?: [...string] @go(Secrets,[]string)

	// ConfigMaps is a list of ConfigMaps in the same namespace as the VMSelect
	// object, which shall be mounted into the VMSelect Pods.
	// The ConfigMaps are mounted into /etc/vm/configs/<configmap-name>.
	// +optional
	configMaps?: [...string] @go(ConfigMaps,[]string)

	// LogFormat for VMSelect to be configured with.
	//default or json
	// +optional
	// +kubebuilder:validation:Enum=default;json
	logFormat?: string @go(LogFormat)

	// LogLevel for VMSelect to be configured with.
	// +optional
	// +kubebuilder:validation:Enum=INFO;WARN;ERROR;FATAL;PANIC
	logLevel?: string @go(LogLevel)

	// ReplicaCount is the expected size of the VMSelect cluster. The controller will
	// eventually make the size of the running cluster equal to the expected
	// size.
	// +operator-sdk:csv:customresourcedefinitions:type=spec,displayName="Number of pods",xDescriptors="urn:alm:descriptor:com.tectonic.ui:podCount,urn:alm:descriptor:io.kubernetes:custom"
	replicaCount?: null | int32 @go(ReplicaCount,*int32)

	// Volumes allows configuration of additional volumes on the output Deployment definition.
	// Volumes specified will be appended to other volumes that are generated as a result of
	// StorageSpec objects.
	// +optional
	volumes?: [...v1.#Volume] @go(Volumes,[]v1.Volume)

	// VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition.
	// VolumeMounts specified will be appended to other VolumeMounts in the VMSelect container,
	// that are generated as a result of StorageSpec objects.
	// +optional
	volumeMounts?: [...v1.#VolumeMount] @go(VolumeMounts,[]v1.VolumeMount)

	// Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	// +operator-sdk:csv:customresourcedefinitions:type=spec,displayName="Resources",xDescriptors="urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
	// +optional
	resources?: v1.#ResourceRequirements @go(Resources)

	// Affinity If specified, the pod's scheduling constraints.
	// +optional
	affinity?: null | v1.#Affinity @go(Affinity,*v1.Affinity)

	// Tolerations If specified, the pod's tolerations.
	// +optional
	tolerations?: [...v1.#Toleration] @go(Tolerations,[]v1.Toleration)

	// SecurityContext holds pod-level security attributes and common container settings.
	// This defaults to the default PodSecurityContext.
	// +optional
	securityContext?: null | v1.#PodSecurityContext @go(SecurityContext,*v1.PodSecurityContext)

	// Containers property allows to inject additions sidecars or to patch existing containers.
	// It can be useful for proxies, backup, etc.
	// +optional
	containers?: [...v1.#Container] @go(Containers,[]v1.Container)

	// InitContainers allows adding initContainers to the pod definition. Those can be used to e.g.
	// fetch secrets for injection into the VMSelect configuration from external sources. Any
	// errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
	// Using initContainers for any use case other then secret fetching is entirely outside the scope
	// of what the maintainers will support and by doing so, you accept that this behaviour may break
	// at any time without notice.
	// +optional
	initContainers?: [...v1.#Container] @go(InitContainers,[]v1.Container)

	// Priority class assigned to the Pods
	// +optional
	priorityClassName?: string @go(PriorityClassName)

	// HostNetwork controls whether the pod may use the node network namespace
	// +optional
	hostNetwork?: bool @go(HostNetwork)

	// DNSPolicy sets DNS policy for the pod
	// +optional
	dnsPolicy?: v1.#DNSPolicy @go(DNSPolicy)

	// TopologySpreadConstraints embedded kubernetes pod configuration option,
	// controls how pods are spread across your cluster among failure-domains
	// such as regions, zones, nodes, and other user-defined topology domains
	// https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
	// +optional
	topologySpreadConstraints?: [...v1.#TopologySpreadConstraint] @go(TopologySpreadConstraints,[]v1.TopologySpreadConstraint)

	// CacheMountPath allows to add cache persistent for VMSelect
	// +optional
	cacheMountPath?: string @go(CacheMountPath)

	// Storage - add persistent volume for cacheMounthPath
	// its useful for persistent cache
	// use storage instead of persistentVolume.
	// +deprecated
	// +optional
	persistentVolume?: null | #StorageSpec @go(Storage,*StorageSpec)

	// StorageSpec - add persistent volume claim for cacheMounthPath
	// its needed for persistent cache
	// +optional
	storage?: null | #StorageSpec @go(StorageSpec,*StorageSpec)

	// ExtraEnvs that will be added to VMSelect pod
	// +optional
	extraEnvs?: [...v1.#EnvVar] @go(ExtraEnvs,[]v1.EnvVar)

	// +optional
	extraArgs?: {[string]: string} @go(ExtraArgs,map[string]string)

	//Port listen port
	// +optional
	port?: string @go(Port)

	// SchedulerName - defines kubernetes scheduler name
	// +optional
	schedulerName?: string @go(SchedulerName)

	// RuntimeClassName - defines runtime class for kubernetes pod.
	//https://kubernetes.io/docs/concepts/containers/runtime-class/
	// +optional
	runtimeClassName?: null | string @go(RuntimeClassName,*string)

	// ServiceSpec that will be added to vmselect service spec
	// +optional
	serviceSpec?: null | #ServiceSpec @go(ServiceSpec,*ServiceSpec)

	// PodDisruptionBudget created by operator
	// +optional
	podDisruptionBudget?: null | #EmbeddedPodDisruptionBudgetSpec @go(PodDisruptionBudget,*EmbeddedPodDisruptionBudgetSpec)

	#EmbeddedProbes
}

#InsertPorts: {
	// GraphitePort listen port
	// +optional
	graphitePort?: string @go(GraphitePort)

	// InfluxPort listen port
	// +optional
	influxPort?: string @go(InfluxPort)

	// OpenTSDBHTTPPort for http connections.
	// +optional
	openTSDBHTTPPort?: string @go(OpenTSDBHTTPPort)

	// OpenTSDBPort for tcp and udp listen
	// +optional
	openTSDBPort?: string @go(OpenTSDBPort)
}

#VMInsert: {
	// +optional
	name?: string @go(Name)

	// PodMetadata configures Labels and Annotations which are propagated to the VMSelect pods.
	podMetadata?: null | #EmbeddedObjectMetadata @go(PodMetadata,*EmbeddedObjectMetadata)

	// Image - docker image settings for VMInsert
	// +optional
	image?: #Image @go(Image)

	// Secrets is a list of Secrets in the same namespace as the VMSelect
	// object, which shall be mounted into the VMSelect Pods.
	// The Secrets are mounted into /etc/vm/secrets/<secret-name>.
	// +optional
	secrets?: [...string] @go(Secrets,[]string)

	// ConfigMaps is a list of ConfigMaps in the same namespace as the VMSelect
	// object, which shall be mounted into the VMSelect Pods.
	// The ConfigMaps are mounted into /etc/vm/configs/<configmap-name>.
	// +optional
	configMaps?: [...string] @go(ConfigMaps,[]string)

	// LogFormat for VMSelect to be configured with.
	//default or json
	// +optional
	// +kubebuilder:validation:Enum=default;json
	logFormat?: string @go(LogFormat)

	// LogLevel for VMSelect to be configured with.
	// +optional
	// +kubebuilder:validation:Enum=INFO;WARN;ERROR;FATAL;PANIC
	logLevel?: string @go(LogLevel)

	// ReplicaCount is the expected size of the VMSelect cluster. The controller will
	// eventually make the size of the running cluster equal to the expected
	// size.
	// +operator-sdk:csv:customresourcedefinitions:type=spec,displayName="Number of pods",xDescriptors="urn:alm:descriptor:com.tectonic.ui:podCount,urn:alm:descriptor:io.kubernetes:custom"
	replicaCount?: null | int32 @go(ReplicaCount,*int32)

	// Volumes allows configuration of additional volumes on the output Deployment definition.
	// Volumes specified will be appended to other volumes that are generated as a result of
	// StorageSpec objects.
	// +optional
	volumes?: [...v1.#Volume] @go(Volumes,[]v1.Volume)

	// VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition.
	// VolumeMounts specified will be appended to other VolumeMounts in the VMSelect container,
	// that are generated as a result of StorageSpec objects.
	// +optional
	volumeMounts?: [...v1.#VolumeMount] @go(VolumeMounts,[]v1.VolumeMount)

	// Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	// +operator-sdk:csv:customresourcedefinitions:type=spec,displayName="Resources",xDescriptors="urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
	// +optional
	resources?: v1.#ResourceRequirements @go(Resources)

	// Affinity If specified, the pod's scheduling constraints.
	// +optional
	affinity?: null | v1.#Affinity @go(Affinity,*v1.Affinity)

	// Tolerations If specified, the pod's tolerations.
	// +optional
	tolerations?: [...v1.#Toleration] @go(Tolerations,[]v1.Toleration)

	// SecurityContext holds pod-level security attributes and common container settings.
	// This defaults to the default PodSecurityContext.
	// +optional
	securityContext?: null | v1.#PodSecurityContext @go(SecurityContext,*v1.PodSecurityContext)

	// Containers property allows to inject additions sidecars or to patch existing containers.
	// It can be useful for proxies, backup, etc.
	// +optional
	containers?: [...v1.#Container] @go(Containers,[]v1.Container)

	// InitContainers allows adding initContainers to the pod definition. Those can be used to e.g.
	// fetch secrets for injection into the VMSelect configuration from external sources. Any
	// errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
	// Using initContainers for any use case other then secret fetching is entirely outside the scope
	// of what the maintainers will support and by doing so, you accept that this behaviour may break
	// at any time without notice.
	// +optional
	initContainers?: [...v1.#Container] @go(InitContainers,[]v1.Container)

	// Priority class assigned to the Pods
	// +optional
	priorityClassName?: string @go(PriorityClassName)

	// HostNetwork controls whether the pod may use the node network namespace
	// +optional
	hostNetwork?: bool @go(HostNetwork)

	// DNSPolicy sets DNS policy for the pod
	// +optional
	dnsPolicy?: v1.#DNSPolicy @go(DNSPolicy)

	// TopologySpreadConstraints embedded kubernetes pod configuration option,
	// controls how pods are spread across your cluster among failure-domains
	// such as regions, zones, nodes, and other user-defined topology domains
	// https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
	// +optional
	topologySpreadConstraints?: [...v1.#TopologySpreadConstraint] @go(TopologySpreadConstraints,[]v1.TopologySpreadConstraint)

	// +optional
	extraArgs?: {[string]: string} @go(ExtraArgs,map[string]string)

	// InsertPorts - additional listen ports for data ingestion.
	insertPorts?: null | #InsertPorts @go(InsertPorts,*InsertPorts)

	//Port listen port
	// +optional
	port?: string @go(Port)

	// SchedulerName - defines kubernetes scheduler name
	// +optional
	schedulerName?: string @go(SchedulerName)

	// RuntimeClassName - defines runtime class for kubernetes pod.
	//https://kubernetes.io/docs/concepts/containers/runtime-class/
	// +optional
	runtimeClassName?: null | string @go(RuntimeClassName,*string)

	// ExtraEnvs that will be added to VMSelect pod
	// +optional
	extraEnvs?: [...v1.#EnvVar] @go(ExtraEnvs,[]v1.EnvVar)

	// ServiceSpec that will be added to vminsert service spec
	// +optional
	serviceSpec?: null | #ServiceSpec @go(ServiceSpec,*ServiceSpec)

	// UpdateStrategy - overrides default update strategy.
	// +kubebuilder:validation:Enum=Recreate;RollingUpdate
	// +optional
	updateStrategy?: null | appsv1.#DeploymentStrategyType @go(UpdateStrategy,*appsv1.DeploymentStrategyType)

	// RollingUpdate - overrides deployment update params.
	// +optional
	rollingUpdate?: null | appsv1.#RollingUpdateDeployment @go(RollingUpdate,*appsv1.RollingUpdateDeployment)

	// PodDisruptionBudget created by operator
	// +optional
	podDisruptionBudget?: null | #EmbeddedPodDisruptionBudgetSpec @go(PodDisruptionBudget,*EmbeddedPodDisruptionBudgetSpec)

	#EmbeddedProbes
}

#VMStorage: {
	// +optional
	name?: string @go(Name)

	// PodMetadata configures Labels and Annotations which are propagated to the VMSelect pods.
	podMetadata?: null | #EmbeddedObjectMetadata @go(PodMetadata,*EmbeddedObjectMetadata)

	// Image - docker image settings for VMStorage
	// +optional
	image?: #Image @go(Image)

	// Secrets is a list of Secrets in the same namespace as the VMSelect
	// object, which shall be mounted into the VMSelect Pods.
	// The Secrets are mounted into /etc/vm/secrets/<secret-name>.
	// +optional
	secrets?: [...string] @go(Secrets,[]string)

	// ConfigMaps is a list of ConfigMaps in the same namespace as the VMSelect
	// object, which shall be mounted into the VMSelect Pods.
	// The ConfigMaps are mounted into /etc/vm/configs/<configmap-name>.
	// +optional
	configMaps?: [...string] @go(ConfigMaps,[]string)

	// LogFormat for VMSelect to be configured with.
	//default or json
	// +optional
	// +kubebuilder:validation:Enum=default;json
	logFormat?: string @go(LogFormat)

	// LogLevel for VMSelect to be configured with.
	// +optional
	// +kubebuilder:validation:Enum=INFO;WARN;ERROR;FATAL;PANIC
	logLevel?: string @go(LogLevel)

	// ReplicaCount is the expected size of the VMSelect cluster. The controller will
	// eventually make the size of the running cluster equal to the expected
	// size.
	// +operator-sdk:csv:customresourcedefinitions:type=spec,displayName="Number of pods",xDescriptors="urn:alm:descriptor:com.tectonic.ui:podCount,urn:alm:descriptor:io.kubernetes:custom"
	replicaCount?: null | int32 @go(ReplicaCount,*int32)

	// Volumes allows configuration of additional volumes on the output Deployment definition.
	// Volumes specified will be appended to other volumes that are generated as a result of
	// StorageSpec objects.
	// +optional
	volumes?: [...v1.#Volume] @go(Volumes,[]v1.Volume)

	// VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition.
	// VolumeMounts specified will be appended to other VolumeMounts in the VMSelect container,
	// that are generated as a result of StorageSpec objects.
	// +optional
	volumeMounts?: [...v1.#VolumeMount] @go(VolumeMounts,[]v1.VolumeMount)

	// Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	// +operator-sdk:csv:customresourcedefinitions:type=spec,displayName="Resources",xDescriptors="urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
	// +optional
	resources?: v1.#ResourceRequirements @go(Resources)

	// Affinity If specified, the pod's scheduling constraints.
	// +optional
	affinity?: null | v1.#Affinity @go(Affinity,*v1.Affinity)

	// Tolerations If specified, the pod's tolerations.
	// +optional
	tolerations?: [...v1.#Toleration] @go(Tolerations,[]v1.Toleration)

	// SecurityContext holds pod-level security attributes and common container settings.
	// This defaults to the default PodSecurityContext.
	// +optional
	securityContext?: null | v1.#PodSecurityContext @go(SecurityContext,*v1.PodSecurityContext)

	// Containers property allows to inject additions sidecars or to patch existing containers.
	// It can be useful for proxies, backup, etc.
	// +optional
	containers?: [...v1.#Container] @go(Containers,[]v1.Container)

	// InitContainers allows adding initContainers to the pod definition. Those can be used to e.g.
	// fetch secrets for injection into the VMSelect configuration from external sources. Any
	// errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
	// Using initContainers for any use case other then secret fetching is entirely outside the scope
	// of what the maintainers will support and by doing so, you accept that this behaviour may break
	// at any time without notice.
	// +optional
	initContainers?: [...v1.#Container] @go(InitContainers,[]v1.Container)

	// Priority class assigned to the Pods
	// +optional
	priorityClassName?: string @go(PriorityClassName)

	// HostNetwork controls whether the pod may use the node network namespace
	// +optional
	hostNetwork?: bool @go(HostNetwork)

	// DNSPolicy sets DNS policy for the pod
	// +optional
	dnsPolicy?: v1.#DNSPolicy @go(DNSPolicy)

	// TopologySpreadConstraints embedded kubernetes pod configuration option,
	// controls how pods are spread across your cluster among failure-domains
	// such as regions, zones, nodes, and other user-defined topology domains
	// https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
	// +optional
	topologySpreadConstraints?: [...v1.#TopologySpreadConstraint] @go(TopologySpreadConstraints,[]v1.TopologySpreadConstraint)

	// StorageDataPath - path to storage data
	// +optional
	storageDataPath?: string @go(StorageDataPath)

	// Storage - add persistent volume for StorageDataPath
	// its useful for persistent cache
	// +optional
	storage?: null | #StorageSpec @go(Storage,*StorageSpec)

	// +optional
	terminationGracePeriodSeconds?: int64 @go(TerminationGracePeriodSeconds)

	// SchedulerName - defines kubernetes scheduler name
	// +optional
	schedulerName?: string @go(SchedulerName)

	// RuntimeClassName - defines runtime class for kubernetes pod.
	//https://kubernetes.io/docs/concepts/containers/runtime-class/
	// +optional
	runtimeClassName?: null | string @go(RuntimeClassName,*string)

	//Port for health check connetions
	port?: string @go(Port)

	// VMInsertPort for VMInsert connections
	// +optional
	vmInsertPort?: string @go(VMInsertPort)

	// VMSelectPort for VMSelect connections
	// +optional
	vmSelectPort?: string @go(VMSelectPort)

	// VMBackup configuration for backup
	// +optional
	vmBackup?: null | #VMBackup @go(VMBackup,*VMBackup)

	// +optional
	extraArgs?: {[string]: string} @go(ExtraArgs,map[string]string)

	// ExtraEnvs that will be added to VMSelect pod
	// +optional
	extraEnvs?: [...v1.#EnvVar] @go(ExtraEnvs,[]v1.EnvVar)

	// ServiceSpec that will be create additional service for vmstorage
	// +optional
	serviceSpec?: null | #ServiceSpec @go(ServiceSpec,*ServiceSpec)

	// PodDisruptionBudget created by operator
	// +optional
	podDisruptionBudget?: null | #EmbeddedPodDisruptionBudgetSpec @go(PodDisruptionBudget,*EmbeddedPodDisruptionBudgetSpec)

	#EmbeddedProbes
}

#VMBackup: {
	// AcceptEULA accepts enterprise feature usage, must be set to true.
	// otherwise backupmanager cannot be added to single/cluster version.
	// https://victoriametrics.com/assets/VM_EULA.pdf
	acceptEULA: bool @go(AcceptEULA)

	// Defines number of concurrent workers. Higher concurrency may reduce backup duration (default 10)
	// +optional
	concurrency?: null | int32 @go(Concurrency,*int32)

	// Defines destination for backup
	destination?: string @go(Destination)

	// Custom S3 endpoint for use with S3-compatible storages (e.g. MinIO). S3 is used if not set
	// +optional
	customS3Endpoint?: null | string @go(CustomS3Endpoint,*string)

	// CredentialsSecret is secret in the same namespace for access to remote storage
	// The secret is mounted into /etc/vm/creds.
	// +optional
	credentialsSecret?: null | v1.#SecretKeySelector @go(CredentialsSecret,*v1.SecretKeySelector)

	// Defines if hourly backups disabled (default false)
	// +optional
	disableHourly?: null | bool @go(DisableHourly,*bool)

	// Defines if daily backups disabled (default false)
	// +optional
	disableDaily?: null | bool @go(DisableDaily,*bool)

	// Defines if weekly backups disabled (default false)
	// +optional
	disableWeekly?: null | bool @go(DisableWeekly,*bool)

	// Defines if monthly backups disabled (default false)
	// +optional
	disableMonthly?: null | bool @go(DisableMonthly,*bool)

	// Image - docker image settings for VMBackuper
	// +optional
	image?: #Image @go(Image)

	//Port for health check connections
	port?: string @go(Port)

	// LogFormat for VMSelect to be configured with.
	// default or json
	// +optional
	// +kubebuilder:validation:Enum=default;json
	logFormat?: null | string @go(LogFormat,*string)

	// LogLevel for VMSelect to be configured with.
	// +optional
	// +kubebuilder:validation:Enum=INFO;WARN;ERROR;FATAL;PANIC
	logLevel?: null | string @go(LogLevel,*string)

	// Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	// if not defined default resources from operator config will be used
	// +optional
	resources?: v1.#ResourceRequirements @go(Resources)

	//extra args like maxBytesPerSecond default 0
	// +optional
	extraArgs?: {[string]: string} @go(ExtraArgs,map[string]string)

	// +optional
	extraEnvs?: [...v1.#EnvVar] @go(ExtraEnvs,[]v1.EnvVar)
}

// Image defines docker image settings
#Image: {
	// Repository contains name of docker image + it's repository if needed
	repository?: string @go(Repository)

	// Tag contains desired docker image version
	tag?: string @go(Tag)

	// PullPolicy describes how to pull docker image
	pullPolicy?: v1.#PullPolicy @go(PullPolicy)
}
