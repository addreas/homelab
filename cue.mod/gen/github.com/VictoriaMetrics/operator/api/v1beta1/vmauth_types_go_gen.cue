// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/VictoriaMetrics/operator/api/v1beta1

package v1beta1

import (
	v12 "k8s.io/api/networking/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// VMAuthSpec defines the desired state of VMAuth
#VMAuthSpec: _

// EmbeddedIngress describes ingress configuration options.
#EmbeddedIngress: {
	// ClassName defines ingress class name for VMAuth
	// +optional
	class_name?: null | string @go(ClassName,*string)

	#EmbeddedObjectMetadata

	// TlsHosts configures TLS access for ingress, tlsSecretName must be defined for it.
	tlsHosts?: [...string] @go(TlsHosts,[]string)

	// TlsSecretName defines secretname at the VMAuth namespace with cert and key
	// https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
	// +optional
	tlsSecretName?: string @go(TlsSecretName)

	// ExtraRules - additional rules for ingress,
	// must be checked for correctness by user.
	// +optional
	extraRules?: [...v12.#IngressRule] @go(ExtraRules,[]v12.IngressRule)

	// ExtraTLS - additional TLS configuration for ingress
	// must be checked for correctness by user.
	// +optional
	extraTls?: [...v12.#IngressTLS] @go(ExtraTLS,[]v12.IngressTLS)

	// Host defines ingress host parameter for default rule
	// It will be used, only if TlsHosts is empty
	// +optional
	host?: string @go(Host)
}

// VMAuthStatus defines the observed state of VMAuth
#VMAuthStatus: {
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +genclient
// +k8s:openapi-gen=true
// VMAuth is the Schema for the vmauths API
#VMAuth: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec?:     #VMAuthSpec        @go(Spec)
	status?:   #VMAuthStatus      @go(Status)
}

// VMAuthList contains a list of VMAuth
#VMAuthList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#VMAuth] @go(Items,[]VMAuth)
}
