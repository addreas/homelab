// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go net/http

package http

import "net"

// A Command represents a SOCKS command.
_#socksCommand: int

// An AuthMethod represents a SOCKS authentication method.
_#socksAuthMethod: int

// A Reply represents a SOCKS command reply code.
_#socksReply: int

_#socksVersion5:                      0x05
_#socksAddrTypeIPv4:                  0x01
_#socksAddrTypeFQDN:                  0x03
_#socksAddrTypeIPv6:                  0x04
_#socksCmdConnect:                    _#socksCommand & 0x01
_#sockscmdBind:                       _#socksCommand & 0x02
_#socksAuthMethodNotRequired:         _#socksAuthMethod & 0x00
_#socksAuthMethodUsernamePassword:    _#socksAuthMethod & 0x02
_#socksAuthMethodNoAcceptableMethods: _#socksAuthMethod & 0xff
_#socksStatusSucceeded:               _#socksReply & 0x00

// An Addr represents a SOCKS-specific address.
// Either Name or IP is used exclusively.
_#socksAddr: {
	Name: string
	IP:   string @go(,net.IP)
	Port: int
}

// A Conn represents a forward proxy connection.
_#socksConn: {
	Conn: net.#Conn
}

// A Dialer holds SOCKS-specific options.
_#socksDialer: {
	// AuthMethods specifies the list of request authentication
	// methods.
	// If empty, SOCKS client requests only AuthMethodNotRequired.
	AuthMethods: [..._#socksAuthMethod] @go(,[]socksAuthMethod)
}

_#socksauthUsernamePasswordVersion: 0x01
_#socksauthStatusSucceeded:         0x00

// UsernamePassword are the credentials for the username/password
// authentication method.
_#socksUsernamePassword: {
	Username: string
	Password: string
}
