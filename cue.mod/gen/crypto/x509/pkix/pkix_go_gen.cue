// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go crypto/x509/pkix

// Package pkix contains shared, low level structures used for ASN.1 parsing
// and serialization of X.509 certificates, CRL and OCSP.
package pkix

import (
	"encoding/asn1"
	"time"
)

// AlgorithmIdentifier represents the ASN.1 structure of the same name. See RFC
// 5280, section 4.1.1.2.
#AlgorithmIdentifier: {
	Algorithm:  asn1.#ObjectIdentifier
	Parameters: asn1.#RawValue
}

#RDNSequence: [...#RelativeDistinguishedNameSET]

#RelativeDistinguishedNameSET: [...#AttributeTypeAndValue]

// AttributeTypeAndValue mirrors the ASN.1 structure of the same name in
// RFC 5280, Section 4.1.2.4.
#AttributeTypeAndValue: {
	Type:  asn1.#ObjectIdentifier
	Value: _ @go(,any)
}

// AttributeTypeAndValueSET represents a set of ASN.1 sequences of
// AttributeTypeAndValue sequences from RFC 2986 (PKCS #10).
#AttributeTypeAndValueSET: {
	Type: asn1.#ObjectIdentifier
	Value: [...[...#AttributeTypeAndValue]] @go(,[][]AttributeTypeAndValue)
}

// Extension represents the ASN.1 structure of the same name. See RFC
// 5280, section 4.2.
#Extension: {
	Id:       asn1.#ObjectIdentifier
	Critical: bool
	Value:    bytes @go(,[]byte)
}

// Name represents an X.509 distinguished name. This only includes the common
// elements of a DN. Note that Name is only an approximation of the X.509
// structure. If an accurate representation is needed, asn1.Unmarshal the raw
// subject or issuer as an RDNSequence.
#Name: {
	Country: [...string] @go(,[]string)
	Organization: [...string] @go(,[]string)
	OrganizationalUnit: [...string] @go(,[]string)
	Locality: [...string] @go(,[]string)
	Province: [...string] @go(,[]string)
	StreetAddress: [...string] @go(,[]string)
	PostalCode: [...string] @go(,[]string)
	SerialNumber: string
	CommonName:   string

	// Names contains all parsed attributes. When parsing distinguished names,
	// this can be used to extract non-standard attributes that are not parsed
	// by this package. When marshaling to RDNSequences, the Names field is
	// ignored, see ExtraNames.
	Names: [...#AttributeTypeAndValue] @go(,[]AttributeTypeAndValue)

	// ExtraNames contains attributes to be copied, raw, into any marshaled
	// distinguished names. Values override any attributes with the same OID.
	// The ExtraNames field is not populated when parsing, see Names.
	ExtraNames: [...#AttributeTypeAndValue] @go(,[]AttributeTypeAndValue)
}

// CertificateList represents the ASN.1 structure of the same name. See RFC
// 5280, section 5.1. Use Certificate.CheckCRLSignature to verify the
// signature.
//
// Deprecated: x509.RevocationList should be used instead.
#CertificateList: {
	TBSCertList:        #TBSCertificateList
	SignatureAlgorithm: #AlgorithmIdentifier
	SignatureValue:     asn1.#BitString
}

// TBSCertificateList represents the ASN.1 structure of the same name. See RFC
// 5280, section 5.1.
//
// Deprecated: x509.RevocationList should be used instead.
#TBSCertificateList: {
	Raw:        asn1.#RawContent
	Version:    int
	Signature:  #AlgorithmIdentifier
	Issuer:     #RDNSequence
	ThisUpdate: time.Time
	NextUpdate: time.Time
	RevokedCertificates: [...#RevokedCertificate] @go(,[]RevokedCertificate)
	Extensions: [...#Extension] @go(,[]Extension)
}

// RevokedCertificate represents the ASN.1 structure of the same name. See RFC
// 5280, section 5.1.
#RevokedCertificate: {
	SerialNumber?:  null | int @go(,*big.Int)
	RevocationTime: time.Time
	Extensions: [...#Extension] @go(,[]Extension)
}
